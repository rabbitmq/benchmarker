#@ load("@ytt:data", "data")
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: benchmark-rabbitmq
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: benchmark
---
apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: benchmark
  annotations:
    telegraf.influxdata.com/port: "15692"
    telegraf.influxdata.com/path: /metrics
    telegraf.influxdata.com/interval: 10s
    telegraf.influxdata.com/scheme: http
    telegraf.influxdata.com/class: basic
spec:
  image: #@ data.values.image
  imagePullSecrets: #@ data.values.imagePullSecrets
  replicas: #@ data.values.replicas
  tolerations:
    - key: "rabbit-pool"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: rabbit-pool
            operator: In
            values:
            - "true"
  resources:
    limits:
      cpu: #@ data.values.maxCPU
      memory: #@ data.values.maxMemory
  rabbitmq:
    additionalConfig: |
      cluster_partition_handling = pause_minority
      vm_memory_high_watermark_paging_ratio = 0.99
      disk_free_limit.relative = 1.0
      collect_statistics_interval = 10000
  persistence:
    storageClassName: #@ data.values.storageClassName
    storage: #@ data.values.storageSize
  override:
    statefulSet:
      spec:
        template:
          spec:
            containers: []
            topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: "topology.kubernetes.io/zone"
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: benchmark
